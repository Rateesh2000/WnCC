import java.io.*;
import java.util.*;
class WnCC
{   //I prefer defining variables which are important as global so I can access them anywhere
    static int minutes;
    static double seconds;
    
    static void time(String s)  //A function which when called will convert the time given as String into time in seconds
    {
        int d = 0;
        for(int i = 0; i < s.length(); i++)
        {
            if(s.charAt(i) == 'm')
            {
                minutes = Integer.parseInt(s.substring(d,i));//converts the string before m into time in minutes
                d = i+1;
            }
            else if(s.charAt(i) == 's')
                seconds = Double.parseDouble(s.substring(d,i));//converts the string before s into time in seconds
        }
        seconds = seconds + minutes*60;
    }
    
    public static void main() throws IOException
    {
        File input = new File("D:\\IITB\\WnCC\\timestat.txt");
        Scanner sc = new Scanner(input);
        String input_string = "";
        int real_runs = 0, user_runs = 0, sys_runs = 0;
        double real_tot = 0, real_avg = 0, real_sum_sq = 0;
        double user_tot = 0, user_avg = 0, user_sum_sq = 0;
        double sys_tot = 0, sys_avg = 0, sys_sum_sq = 0;
        while(sc.hasNext()) //loop will go on executing till there is input available in the file
        {
            input_string = sc.next();
            input_string = input_string.trim();
            if(input_string.compareTo("real") == 0)
            {
                real_runs++;
                input_string = sc.next();
                time(input_string);
                real_tot += seconds;
                real_sum_sq += seconds*seconds;
            }
            else if(input_string.compareTo("user") == 0)
            {
                user_runs++;
                input_string = sc.next();
                time(input_string);
                user_tot += seconds;
                user_sum_sq += seconds*seconds;
            }
            else if(input_string.compareTo("sys") == 0)
            {
                sys_runs++;
                input_string = sc.next();
                time(input_string);
                sys_tot += seconds;
                sys_sum_sq += seconds*seconds;
            }
        }
        real_avg = real_tot/real_runs;
        double real_var = real_sum_sq/real_runs - real_avg*real_avg;
        double real_std_dev = Math.sqrt(real_var);
        
        user_avg = user_tot/user_runs;
        double user_var = user_sum_sq/user_runs - user_avg*user_avg;
        double user_std_dev = Math.sqrt(user_var);
        
        sys_avg = sys_tot/sys_runs;
        double sys_var = sys_sum_sq/sys_runs - sys_avg*sys_avg;
        double sys_std_dev = Math.sqrt(sys_var);
        
        sc = new Scanner(input);
        int real_runs_in_range = 0, user_runs_in_range = 0, sys_runs_in_range = 0;
        while(sc.hasNext())
        {
            input_string = sc.next();
            input_string = input_string.trim();
            if(input_string.compareTo("real") == 0)
            {
                input_string = sc.next();
                time(input_string);
                if(real_avg - real_std_dev <= seconds && seconds <= real_avg + real_std_dev)
                    real_runs_in_range++;
            }
            else if(input_string.compareTo("user") == 0)
            {
                input_string = sc.next();
                time(input_string);
                if(user_avg - user_std_dev <= seconds && seconds <= user_avg + user_std_dev)
                    user_runs_in_range++;
            }
            else if(input_string.compareTo("sys") == 0)
            {
                input_string = sc.next();
                time(input_string);
                if(sys_avg - sys_std_dev <= seconds && seconds <= sys_avg + sys_std_dev)
                    sys_runs_in_range++;
            }
        }
        System.out.println(" Number of runs : " + real_runs);
        System.out.println("\n Average Time statistics");
        System.out.println(" real " + real_avg + "   \t user " + user_avg + "\t sys " + sys_avg);
        System.out.println("\n Standard Deviation of Time statistics");
        System.out.println(" real " + real_std_dev + "\t user " + user_std_dev + "\t sys " + sys_std_dev);
        System.out.println("\n Number of runs within average-standard deviation to average+standard deviation");
        System.out.println(" real " + real_runs_in_range + "   \t user " + user_runs_in_range + "\t sys " + sys_runs_in_range);
    }
}
